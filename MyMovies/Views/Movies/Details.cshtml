@model MyMovies.ViewModels.MovieVM
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<User> SignInManager;
@inject UserManager<User> UserManager;
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@{
    var actorList = new List<string>();
    foreach(var actor in Model.Actors)
    {
        actorList.Add(actor.Name);
    }

    var directorList = new List<string>();
    foreach(var director in Model.Directors)
    {
        directorList.Add(director.Name);
    }

}


<table class="table">
    <tbody>
            <tr>
                <td>
                    <img class="img-thumbnail align-content-center img-responsive" display="block" src=@Model.Poster />
                </td>
                <td>
                    <div class="col-sm-8 align-items-center">
                        <h3>@Html.DisplayFor(model => model.Title)</h3>
                        <p>
                        <strong>Release Date:</strong> @Html.DisplayFor(model => model.Release)
                        </p>
                        <p>
                        <strong>Genre:</strong> @Html.DisplayFor(model => model.Genre)
                        </p>
                        <p>
                        <strong>Imdb Rating:</strong> @Html.DisplayFor(model => model.imdbRating)
                        </p>
                        <p>
                        <strong>Director:</strong> @if(Model.Directors == null){<Text>N/A</Text>}
                            @string.Join(", ", directorList)
                        </p>
                        <p>
                        <strong>Award:</strong> @Html.DisplayFor(model => model.Awards)
                        </p>
                        <p>
                        <strong>Plot:</strong> @Html.DisplayFor(model => model.Plot)
                        </p>
                        <p>
                        <strong>Actors:</strong> @if (Model.Actors == null)
                        {
                            <Text>N/A</Text>
                        }
                            @string.Join(", ", actorList)
                        </p>
                        <p> 
                        <strong>Writors</strong> @Html.DisplayFor(model =>model.Writer)
                        </p>
                        <p>
                        <strong>Language:</strong> @Html.DisplayFor(model => model.Language)
                        </p>
                        <p>
                        <strong>Country:</strong> @Html.DisplayFor(model => model.Country)
                        </p>
                        <p>
                        <strong>BoxOffice:</strong> @if(Model.BoxOffice == 0)
                        {
                           <text>N/A</text>
                        }else{
                            <text>$</text> @Html.DisplayFor(model => model.BoxOffice)
                        }
                        </p>
                        <div>
                             @if (User.IsInRole("Admin"))//add role base stuff after finishing CRUD methods
                             {
                                <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
                                <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a> 
                            
                                
                             }
                        <a asp-action="Index">Back to List</a>
                        </div>
                    </div>
                </td>
            </tr>
    </tbody>
</table>

@* <div>
    <h4>Movie</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Actors)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Actors)
        </dd>



    </dl>
</div>*@

 